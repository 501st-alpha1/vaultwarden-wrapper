id: bitwarden
title: "Bitwarden"
version: 1.18.0
release-notes: "Upgrade to EmbassyOS v0.3.0"
license: gnu
wrapper-repo: "https://github.com/Start9Labs/bitwarden-wrapper"
upstream-repo: "https://github.com/dani-garcia/vaultwarden"
support-site: "https://vaultwarden.discourse.group/"
marketing-site: "https://github.com/dani-garcia/vaultwarden/"
donation-url: "https://www.paypal.com/paypalme/DaniGG"
build: ["make"]
min-os-version: "0.3.0"
description:
  short: Secure password management
  long: |
    Bitwarden RS is a lightweight and secure password manager for storing and autofilling sensitive information such as usernames and passwords, credit cards, identities, and notes. All data is stored in an encrypted vault on your Embassy.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: "/usr/local/bin/docker_entrypoint.sh"
  args: []
  mounts:
    main: /data
  io-format: yaml
health-checks:
  main: 
    type: docker
    image: main
    system: false
    entrypoint: sh
    args: ["-c", "echo 'TODO' || exit 1"]
    mounts:
      main: /data
    io-format: yaml
    critical: false
config:
  get:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args: 
      - config
      - get
      - /data
      - "/mnt/assets/config_spec.yaml"
    mounts:
      compat: /mnt/assets
      main: /data
    io-format: yaml
  set:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - config
      - set
      - bitwarden
      - /data
      - "/mnt/assets/config_rules.yaml"
    mounts:
      compat: /mnt/assets
      main: /data
properties:
  type: docker
  image: compat
  system: true
  entrypoint: compat
  args:
    - properties
    - /data
  mounts:
    main: /data
    compat: /mnt/assets
  io-format: yaml
dependencies: {}
volumes:
  main:
    type: data
  compat:
    type: assets
alerts: {}
interfaces:
  main:
    name: Network Interface
    description: Specifies the interfaces to listen on for HTTP connections.
    tor-config:
      port-mapping:
        80: "80"
        3012: "3012"
    lan-config:
      80:
        ssl: false
        mapping: 80
      3012:
        ssl: false
        mapping: 3012
    ui: true
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - bitwarden
      - /mnt/backup
      - /data
    mounts:
      BACKUP: /mnt/backup
      main: /data
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - bitwarden
      - /data
      - /mnt/backup
    mounts:
      BACKUP: /mnt/backup
      main: /data